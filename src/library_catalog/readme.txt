1. Основная проблема хранения данных в опретивной памяти заключается в том, что ОЗУ не предназначена для длительного храняния данных. 
То есть при завершении программы или отключении устройства, на котором хранятся данные, вся информация будет утеряна. 

2. Примущества файлового хранения:
- читаемый формат(JSON)
- универсальность, поддерживается множеством языков программирования
- гибкость, не требует строгой структуры, можно хранить различные данные 
Недостатки:
- требуется сторонняя валиадция(например, pydantic)
- поддерживает не все типы данных
- файл быстро разрастается и из-за этого в перспективе упадет скорость работы с хранилищем
- проблемы с параллельным доступом, так как нет механизма транзакций

3. 
критерий              память          файлы                     БД 
скорость доступа      быстро          средняя          быстро(с индексами)
объем данных         ограничен        большой           очень большой
структуры данных      любые       гибкие(json etc)    строго(таблицы, схемы) 
надежность       энергозависимость   конфликты               ACID
мастабируемость      дорогая          средне            дешевле(шардинг и тд)
сложность разработки  быстро    средне(парсинг и тд)   Сложно(проектирование и ORM)

Вывод: ОЗУ подходит для работы с не очень критичными данными - кэш, риалтайм системы. 
Файловое хранение подходит для работы с логами, внешним айпи, конфигами.
БД - для длительного хранения основного массива важных данных.

4. При работе с данными в ОЗУ могут просходить Race Condition, когда два потока работают с одними 
данными и мешают друг другу правильно выполнить необходимы инструкции. Но в питоне есть GIL, поэтом в этом плане немного попроще. 

При работе с файлами тоже могут возникать Race Condition.

В БД нужно придерживаться принципов ACID и изолировать транзакции, тогда большинство проблем будет решено. 


